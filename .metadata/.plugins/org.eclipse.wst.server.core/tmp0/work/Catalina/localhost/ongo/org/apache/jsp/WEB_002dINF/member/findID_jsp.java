/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2023-01-26 03:18:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class findID_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("	<script type=\"text/javascript\">\n");
      out.write("		function fnCheck(){\n");
      out.write(" 			var data = {\"member_email\":$(\"#member_email\").val(),\n");
      out.write("						\"member_phone\":$(\"#member_phone\").val()};\n");
      out.write("			$.ajax({\n");
      out.write("				url : \"/ongo/member/ajax_findid\",\n");
      out.write("				type : \"get\",\n");
      out.write("				data : data,\n");
      out.write("				success : function(data){\n");
      out.write("					if(data!=\"\"){\n");
      out.write("						$(\"#usrId\").html(data);\n");
      out.write("						$(\"#div1\").css(\"display\",\"none\");\n");
      out.write("						$(\"#div2\").css(\"display\",\"block\");\n");
      out.write("					} else {\n");
      out.write("						$(\"#usrId\").html(\"\");\n");
      out.write("						$(\"#div2\").css(\"display\",\"none\");\n");
      out.write("						alert(\"일치하는 아이디가 없습니다.\");\n");
      out.write("					}\n");
      out.write("				},//end success\n");
      out.write("				error : function(obj,msg,statusMsg){\n");
      out.write("					alert(\"오류\",statusMsg);\n");
      out.write("				}//end error\n");
      out.write("			})//end ajax\n");
      out.write("		}//end fnCheck\n");
      out.write("	</script>\n");
      out.write(" </head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!-- content -->\n");
      out.write("<div id=\"contents\">\n");
      out.write("    <!-- title -->\n");
      out.write("    <div class=\"sub_top center\">\n");
      out.write("        <h1>아이디 찾기</h1>\n");
      out.write("        <p>이메일과 핸드폰번호를 통하여 아이디 찾기를 진행 할 수 있습니다.</p>\n");
      out.write("    </div>\n");
      out.write("    <!-- //title -->\n");
      out.write("\n");
      out.write("	<div class=\"login_container container\" >\n");
      out.write("        <div class=\"tab-content\" id=\"div1\">\n");
      out.write("            <div class=\"tab-pane fade show active\" id=\"normal\" role=\"tabpanel\" aria-labelledby=\"normal-tab\">    \n");
      out.write("                <h2 class=\"visually-hidden\">일반회원</h2>       \n");
      out.write("                <div class=\"login_wrap\">\n");
      out.write("                    <div class=\"login_section all\">\n");
      out.write("                        <div class=\"input-group\">\n");
      out.write("			                <input type=\"text\" class=\"form-control\" id=\"member_email\" name=\"member_email\" placeholder=\"이메일을 입력해주세요.\" value=\"\">\n");
      out.write("			            </div>\n");
      out.write("		                <div class=\"input-group\">\n");
      out.write("			            	<input type=\"text\" class=\"form-control\" id=\"member_phone\" name=\"member_phone\" placeholder=\"핸드폰번호를 입력해주세요.\" value=\"\">\n");
      out.write("			            </div>\n");
      out.write("	                    	<button type=\"button\" class=\"btn btn-primary btn-full\" onclick=\"fnCheck()\">아이디 찾기</button>\n");
      out.write("	            	</div>\n");
      out.write("	            </div>\n");
      out.write("	        </div>\n");
      out.write("		</div>   \n");
      out.write("    <div class=\"login_container container\" id=\"div2\" style=\"display: none\">\n");
      out.write("      <div class=\"tab-content\">\n");
      out.write("          <div class=\"tab-pane fade show active\" id=\"normal\" role=\"tabpanel\" aria-labelledby=\"normal-tab\">    \n");
      out.write("              <h2 class=\"visually-hidden\">일반회원</h2>       \n");
      out.write("              <div class=\"login_wrap\">\n");
      out.write("                  <div class=\"login_section all\">\n");
      out.write("                      <h3 class=\"text-center blue\">아이디 조회</h3>\n");
      out.write("                      <div class=\"text-center\"><img src=\"/ongo/images/join_normal.png\" alt=\"\"></div>\n");
      out.write("                      <p class=\"text-center\">해당 명의로 가입된 아이디는 <strong><span id=\"usrId\"></span></strong> 입니다.</p>\n");
      out.write("                      <button type=\"button\" class=\"btn btn-primary btn-full\" onclick=\"location.href='/ongo/member/login.do'\">로그인</button>\n");
      out.write("                  </div>\n");
      out.write("              </div>\n");
      out.write("          </div>\n");
      out.write("      </div>\n");
      out.write("  </div>\n");
      out.write("  \n");
      out.write("\n");
      out.write("  \n");
      out.write("  \n");
      out.write("  \n");
      out.write("  \n");
      out.write("  \n");
      out.write("</div><!-- // contents -->\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- Footer -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/footer.jsp", out, false);
      out.write("\n");
      out.write("<!-- //Footer -->\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
